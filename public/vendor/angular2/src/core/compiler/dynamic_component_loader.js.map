{"version":3,"sources":["dynamic_component_loader.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,sTAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,UAAoB,KAAG,IAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,sBAAoB,KAAG,gBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,eAAoB,KAAG,SAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,8BAAoB,KAAG,wBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,sBAAoB,KAAG,gBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;mBAFY,CAAA,SAAQ,AAAC,kBAAjC,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,eAiBP,SAAM,aAAW,CACV,QAAO,CAAG,CAAA,QAAO,CAAG,CAAA,aAAY,CAAG;AAC7C,eAAK,cAAc,AAAC,CAAC,QAAO,CAAG,WAAS,CAAG,SAAO,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,cAAY,CAAG,QAAM,CAAC,CAAC;AAC7F,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,SAAS,EAAI,SAAO,CAAC;AACxB,aAAG,cAAc,EAAI,cAAY,CAAC;QACpC,AAvBgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAuB5C,YAAI,SAAO,EAAI;AACb,iBAAO,CAAA,IAAG,SAAS,SAAS,CAAC;UAC/B;AACA,YAAI,SAAO,EAAI;AACb,iBAAO,CAAA,IAAG,SAAS,SAAS,CAAC;UAC/B;AAAA,aA3B8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AAgCtE,WAAK,eAAe,AAAC,CAAC,YAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC/D,eAAO,EAAC,CAAC,UAAS,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAG,EAAC,OAAM,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;6BAlCmB,CAAA,SAAQ,AAAC,4BAAjC,SAAS,AAAD;AACE,AAAI,UAAA,yBAkCP,SAAM,uBAAqB,CACpB,QAAO,CAAG,CAAA,uBAAsB,CAAG,CAAA,WAAU,CAAG,CAAA,YAAW,CAAG;AACxE,eAAK,cAAc,AAAC,CAAC,QAAO,CAAG,SAAO,CAAG,wBAAsB,CAAG,wBAAsB,CAAG,YAAU,CAAG,YAAU,CAAG,aAAW,CAAG,gBAAc,CAAC,CAAC;AACnJ,aAAG,UAAU,EAAI,SAAO,CAAC;AACzB,aAAG,yBAAyB,EAAI,wBAAsB,CAAC;AACvD,aAAG,aAAa,EAAI,YAAU,CAAC;AAC/B,aAAG,cAAc,EAAI,aAAW,CAAC;QACnC,AAzCgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAyC5C,iCAAuB,CAAvB,UAAyB,IAAG,CAAG,CAAA,QAAO,AAAiB;cAAd,SAAO,6CAAI,KAAG;;AACrD,iBAAK,cAAc,AAAC,CAAC,IAAG,CAAG,KAAG,CAAG,SAAO,CAAG,WAAS,CAAG,SAAO,CAAG,SAAO,CAAC,CAAC;AAC1E,eAAG,uBAAuB,AAAC,CAAC,IAAG,CAAC,CAAC;AACjC,AAAI,cAAA,CAAA,UAAS,EAAI,CAAA,IAAG,yBAAyB,KAAK,AAAC,CAAC,IAAG,CAAC,WAAW,CAAC;AACpE,AAAI,cAAA,CAAA,gBAAe,EAAI,CAAA,gBAAe,eAAe,AAAC,CAAC,IAAG,CAAG,WAAS,CAAC,CAAC;AACxE,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,UAAU,QAAQ,AAAC,CAAC,IAAG,CAAC,KAAK,AAAC,EAAC,SAAC,kBAAiB,CAAM;AAClF,AAAI,gBAAA,CAAA,aAAY,EAAI,CAAA,iBAAgB,QAAQ,AAAC,CAAC,kBAAiB,CAAC,CAAC;AACjE,AAAI,gBAAA,CAAA,QAAO,EAAI,CAAA,QAAO,SAAS,CAAC;AAChC,+BAAiB,4BAA4B,AAAC,CAAC,QAAO,CAAG,CAAA,QAAO,kBAAkB,CAAG,cAAY,CAAG,iBAAe,CAAG,SAAO,CAAC,CAAC;AAC/H,mBAAO,IAAI,aAAW,AAAC,CAAC,QAAO,CAAG,CAAA,QAAO,gBAAgB,8BAA8B,AAAC,EAAC,CAAG,cAAY,CAAC,CAAC;YAC5G,EAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,OAAM,CAAG,aAAW,CAAC,CAAC,CAAC;UACjD;AACA,4BAAkB,CAAlB,UAAoB,iBAAgB,CAAG,CAAA,IAAG,CAAG,CAAA,QAAO,AAAiB;cAAd,SAAO,6CAAI,KAAG;;AACnE,iBAAK,cAAc,AAAC,CAAC,iBAAgB,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,KAAG,CAAG,KAAG,CAAG,SAAO,CAAG,WAAS,CAAG,SAAO,CAAG,SAAO,CAAC,CAAC;AAC9G,eAAG,uBAAuB,AAAC,CAAC,IAAG,CAAC,CAAC;AACjC,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,UAAU,cAAc,AAAC,CAAC,IAAG,CAAC,KAAK,AAAC,EAAC,SAAC,aAAY,CAAM;AACnF,AAAI,gBAAA,CAAA,QAAO,EAAI,CAAA,iBAAgB,QAAQ,AAAC,CAAC,aAAY,CAAC,CAAC;AACvD,+BAAiB,uBAAuB,AAAC,CAAC,IAAG,CAAG,kBAAgB,CAAG,SAAO,CAAG,SAAO,CAAC,CAAC;AACtF,AAAI,gBAAA,CAAA,WAAU,EAAI,IAAI,WAAS,AAAC,CAAC,QAAO,iBAAiB,CAAE,CAAA,CAAC,CAAC,CAAC;AAC9D,AAAI,gBAAA,CAAA,SAAQ,EAAI,CAAA,QAAO,iBAAiB,CAAE,CAAA,CAAC,aAAa,AAAC,EAAC,CAAC;AAC3D,mBAAO,IAAI,aAAW,AAAC,CAAC,WAAU,CAAG,UAAQ,CAAG,CAAA,QAAO,oBAAoB,CAAE,CAAA,CAAC,CAAC,CAAC;YAClF,EAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,OAAM,CAAG,aAAW,CAAC,CAAC,CAAC;UACjD;AACA,+BAAqB,CAArB,UAAuB,IAAG,CAAG;AAC3B,iBAAK,cAAc,AAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC;AAChC,AAAI,cAAA,CAAA,UAAS,EAAI,CAAA,IAAG,yBAAyB,KAAK,AAAC,CAAC,IAAG,CAAC,WAAW,CAAC;AACpE,eAAI,CAAC,CAAC,UAAS,WAAa,UAAQ,CAAC,CAAG;AACtC,kBAAM,IAAI,cAAY,AAAC,EAAC,kBAAkB,EAAC,CAAA,SAAQ,AAAC,CAAC,IAAG,CAAC,CAAA,CAAC,mCAAiC,EAAC,CAAC;YAC/F;AAAA,UACF;AAAA,aArE8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AA0EtE,WAAK,eAAe,AAAC,CAAC,sBAAqB,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC1E,eAAO,EAAC,GAAI,WAAS,AAAC,EAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,sBAAqB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACzE,eAAO,EAAC,CAAC,QAAO,CAAC,CAAG,EAAC,uBAAsB,CAAC,CAAG,EAAC,WAAU,CAAC,CAAG,EAAC,eAAc,CAAC,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,sBAAqB,UAAU,yBAAyB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC5G,eAAO,EAAC,CAAC,IAAG,CAAC,CAAG,EAAC,UAAS,CAAC,CAAG,EAAC,QAAO,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,sBAAqB,UAAU,oBAAoB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACvG,eAAO,EAAC,CAAC,MAAK,KAAK,IAAI,CAAC,CAAG,EAAC,IAAG,CAAC,CAAG,EAAC,UAAS,CAAC,CAAG,EAAC,QAAO,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,sBAAqB,UAAU,uBAAuB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC1G,eAAO,EAAC,CAAC,IAAG,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IAtF0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAyFwC","file":"angular2/src/core/compiler/dynamic_component_loader.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Key,\n  Injector,\n  Injectable,\n  ResolvedBinding} from 'angular2/di';\nimport {Compiler} from './compiler';\nimport {DirectiveMetadataReader} from './directive_metadata_reader';\nimport {Type,\n  BaseException,\n  stringify,\n  isPresent} from 'angular2/src/facade/lang';\nimport {Promise} from 'angular2/src/facade/async';\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {ViewFactory} from 'angular2/src/core/compiler/view_factory';\nimport {AppViewHydrator} from 'angular2/src/core/compiler/view_hydrator';\nimport {ElementRef,\n  DirectiveBinding} from './element_injector';\nimport {AppView} from './view';\nexport class ComponentRef {\n  constructor(location, instance, componentView) {\n    assert.argumentTypes(location, ElementRef, instance, assert.type.any, componentView, AppView);\n    this.location = location;\n    this.instance = instance;\n    this.componentView = componentView;\n  }\n  get injector() {\n    return this.location.injector;\n  }\n  get hostView() {\n    return this.location.hostView;\n  }\n}\nObject.defineProperty(ComponentRef, \"parameters\", {get: function() {\n    return [[ElementRef], [assert.type.any], [AppView]];\n  }});\nexport class DynamicComponentLoader {\n  constructor(compiler, directiveMetadataReader, viewFactory, viewHydrator) {\n    assert.argumentTypes(compiler, Compiler, directiveMetadataReader, DirectiveMetadataReader, viewFactory, ViewFactory, viewHydrator, AppViewHydrator);\n    this._compiler = compiler;\n    this._directiveMetadataReader = directiveMetadataReader;\n    this._viewFactory = viewFactory;\n    this._viewHydrator = viewHydrator;\n  }\n  loadIntoExistingLocation(type, location, injector = null) {\n    assert.argumentTypes(type, Type, location, ElementRef, injector, Injector);\n    this._assertTypeIsComponent(type);\n    var annotation = this._directiveMetadataReader.read(type).annotation;\n    var componentBinding = DirectiveBinding.createFromType(type, annotation);\n    return assert.returnType((this._compiler.compile(type).then((componentProtoView) => {\n      var componentView = this._viewFactory.getView(componentProtoView);\n      var hostView = location.hostView;\n      this._viewHydrator.hydrateDynamicComponentView(hostView, location.boundElementIndex, componentView, componentBinding, injector);\n      return new ComponentRef(location, location.elementInjector.getDynamicallyLoadedComponent(), componentView);\n    })), assert.genericType(Promise, ComponentRef));\n  }\n  loadIntoNewLocation(elementOrSelector, type, location, injector = null) {\n    assert.argumentTypes(elementOrSelector, assert.type.any, type, Type, location, ElementRef, injector, Injector);\n    this._assertTypeIsComponent(type);\n    return assert.returnType((this._compiler.compileInHost(type).then((hostProtoView) => {\n      var hostView = this._viewFactory.getView(hostProtoView);\n      this._viewHydrator.hydrateInPlaceHostView(null, elementOrSelector, hostView, injector);\n      var newLocation = new ElementRef(hostView.elementInjectors[0]);\n      var component = hostView.elementInjectors[0].getComponent();\n      return new ComponentRef(newLocation, component, hostView.componentChildViews[0]);\n    })), assert.genericType(Promise, ComponentRef));\n  }\n  _assertTypeIsComponent(type) {\n    assert.argumentTypes(type, Type);\n    var annotation = this._directiveMetadataReader.read(type).annotation;\n    if (!(annotation instanceof Component)) {\n      throw new BaseException(`Could not load '${stringify(type)}' because it is not a component.`);\n    }\n  }\n}\nObject.defineProperty(DynamicComponentLoader, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(DynamicComponentLoader, \"parameters\", {get: function() {\n    return [[Compiler], [DirectiveMetadataReader], [ViewFactory], [AppViewHydrator]];\n  }});\nObject.defineProperty(DynamicComponentLoader.prototype.loadIntoExistingLocation, \"parameters\", {get: function() {\n    return [[Type], [ElementRef], [Injector]];\n  }});\nObject.defineProperty(DynamicComponentLoader.prototype.loadIntoNewLocation, \"parameters\", {get: function() {\n    return [[assert.type.any], [Type], [ElementRef], [Injector]];\n  }});\nObject.defineProperty(DynamicComponentLoader.prototype._assertTypeIsComponent, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\n//# sourceMappingURL=dynamic_component_loader.js.map\n\n//# sourceMappingURL=./dynamic_component_loader.map"]}
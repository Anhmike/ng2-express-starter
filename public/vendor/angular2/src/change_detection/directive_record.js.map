{"version":3,"sources":["directive_record.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,wEAAoB,UAAS,SAAQ;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;sBAFY,CAAA,SAAQ,AAAC,qBAAjC,SAAS,AAAD;AACE,AAAI,UAAA,kBAEP,SAAM,gBAAc,CACb,YAAW,CAAG,CAAA,cAAa,CAAG,CAAA,oBAAmB,CAAG,CAAA,YAAW,CAAG,CAAA,eAAc,CAAG;AAC7F,eAAK,cAAc,AAAC,CAAC,YAAW,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,eAAa,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,qBAAmB,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAG,aAAW,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAG,gBAAc,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC7M,aAAG,aAAa,EAAI,aAAW,CAAC;AAChC,aAAG,eAAe,EAAI,eAAa,CAAC;AACpC,aAAG,qBAAqB,EAAI,qBAAmB,CAAC;AAChD,aAAG,aAAa,EAAI,aAAW,CAAC;AAChC,aAAG,gBAAgB,EAAI,gBAAc,CAAC;QACxC,AAVgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAU5C,gCAAsB,CAAtB,UAAwB,AAAD,CAAG;AACxB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,aAAY,OAAO,AAAC,CAAC,IAAG,gBAAgB,CAAG,QAAM,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACtG;AACA,YAAI,KAAG,EAAI;AACT,mBAAU,IAAG,aAAa,EAAC,IAAG,EAAC,CAAA,IAAG,eAAe,EAAG;UACtD;AAAA,aAd8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AAmBtE,WAAK,eAAe,AAAC,CAAC,eAAc,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAClE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,QAAQ,CAAC,CAAG,EAAC,MAAK,KAAK,QAAQ,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACzH,CAAC,CAAC,CAAC;IAnB0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAsBgC","file":"angular2/src/change_detection/directive_record.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ON_PUSH} from './constants';\nimport {StringWrapper} from 'angular2/src/facade/lang';\nexport class DirectiveRecord {\n  constructor(elementIndex, directiveIndex, callOnAllChangesDone, callOnChange, changeDetection) {\n    assert.argumentTypes(elementIndex, assert.type.number, directiveIndex, assert.type.number, callOnAllChangesDone, assert.type.boolean, callOnChange, assert.type.boolean, changeDetection, assert.type.string);\n    this.elementIndex = elementIndex;\n    this.directiveIndex = directiveIndex;\n    this.callOnAllChangesDone = callOnAllChangesDone;\n    this.callOnChange = callOnChange;\n    this.changeDetection = changeDetection;\n  }\n  isOnPushChangeDetection() {\n    return assert.returnType((StringWrapper.equals(this.changeDetection, ON_PUSH)), assert.type.boolean);\n  }\n  get name() {\n    return `${this.elementIndex}_${this.directiveIndex}`;\n  }\n}\nObject.defineProperty(DirectiveRecord, \"parameters\", {get: function() {\n    return [[assert.type.number], [assert.type.number], [assert.type.boolean], [assert.type.boolean], [assert.type.string]];\n  }});\n//# sourceMappingURL=directive_record.js.map\n\n//# sourceMappingURL=./directive_record.map"]}